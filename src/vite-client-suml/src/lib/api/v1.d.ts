/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/core/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root_api_v1_core__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Login
         * @description Loguje użytkownika
         */
        post: operations["login_api_v1_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh Token
         * @description Odświeża tokeny
         */
        post: operations["refresh_token_api_v1_auth_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Logout
         * @description Wylogowuje użytkownika
         */
        post: operations["logout_api_v1_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Current User
         * @description Pobiera informacje o bieżącym użytkowniku
         */
        get: operations["get_current_user_api_v1_auth_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register
         * @description Rejestruje nowego użytkownika
         */
        post: operations["register_api_v1_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/generate_account_creation_token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Account Creation Token
         * @description Generuje token tworzenia konta (tylko dla administratorów)
         */
        post: operations["generate_account_creation_token_api_v1_auth_generate_account_creation_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/delete-my-account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete My Account
         * @description Usuwa własne konto użytkownika i wylogowuje go
         */
        delete: operations["delete_my_account_api_v1_auth_delete_my_account_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/account-creation-tokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Account Creation Tokens
         * @description Pobiera listę wszystkich tokenów tworzenia kont (tylko dla administratorów)
         */
        get: operations["get_account_creation_tokens_api_v1_auth_account_creation_tokens_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/account-creation-tokens/{token_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete Account Creation Token
         * @description Usuwa token tworzenia konta (tylko dla administratorów)
         */
        delete: operations["delete_account_creation_token_api_v1_auth_account_creation_tokens__token_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Users
         * @description Pobiera paginowaną listę wszystkich użytkowników (tylko dla administratorów)
         */
        get: operations["get_users_api_v1_auth_users_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete User
         * @description Usuwa użytkownika (tylko dla administratorów)
         */
        delete: operations["delete_user_api_v1_auth_users__user_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/users/{user_id}/role": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update User Role
         * @description Aktualizuje rolę użytkownika (tylko dla super administratorów)
         */
        put: operations["update_user_role_api_v1_auth_users__user_id__role_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Change Password
         * @description Zmienia hasło zalogowanego użytkownika
         */
        post: operations["change_password_api_v1_auth_change_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/change-username": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Change Username
         * @description Zmienia nazwę zalogowanego użytkownika
         */
        put: operations["change_username_api_v1_auth_change_username_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/moves/{character_class}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Available Moves
         * @description Pobiera dostępne ruchy dla danej klasy postaci.
         */
        get: operations["get_available_moves_api_v1_character_gen_moves__character_class__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/equipment/{character_class}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Base Equipment
         * @description Pobiera podstawowy ekwipunek dla danej klasy postaci.
         */
        get: operations["get_base_equipment_api_v1_character_gen_equipment__character_class__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/weapons/{character_class}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Available Weapons
         * @description Pobiera dostępne bronie dla danej klasy postaci.
         */
        get: operations["get_available_weapons_api_v1_character_gen_weapons__character_class__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/class-description/{character_class}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Class Description
         * @description Pobiera opis klasy postaci.
         */
        get: operations["get_class_description_api_v1_character_gen_class_description__character_class__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Character
         * @description Generuje postać na podstawie podanych informacji.
         */
        post: operations["generate_character_api_v1_character_gen_generate_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/questions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Fetch Creation Questions
         * @description Pobiera pytania do tworzenia postaci na podstawie informacji początkowych.
         *     :param initial_info: Informacje początkowe o postaci przy jej generowaniu
         *     :return: Lista pytań
         */
        post: operations["fetch_creation_questions_api_v1_character_gen_questions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Save Character
         * @description Zapisuje wygenerowaną postać.
         */
        post: operations["save_character_api_v1_character_gen_save_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/saved-characters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Saved Characters
         * @description Pobiera wszystkie zapisane postacie użytkownika.
         */
        get: operations["get_saved_characters_api_v1_character_gen_saved_characters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/saved-characters/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Characters Stats
         * @description Pobiera statystyki zapisanych postaci użytkownika.
         */
        get: operations["get_characters_stats_api_v1_character_gen_saved_characters_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/character-gen/saved-characters/{character_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Character
         * @description Pobiera pojedynczą postać użytkownika.
         *     Dostęp ma tylko właściciel postaci.
         */
        get: operations["get_character_api_v1_character_gen_saved_characters__character_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Root */
        get: operations["read_root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Item */
        get: operations["read_item_items__item_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_generate_character_api_v1_character_gen_generate_post */
        Body_generate_character_api_v1_character_gen_generate_post: {
            initial_info: components["schemas"]["InitialInfo"];
            /** Questions */
            questions: components["schemas"]["Question"][];
            /** Answers */
            answers: {
                [key: string]: string;
            };
        };
        /**
         * ChangePasswordRequest
         * @description Model żądania zmiany hasła
         */
        ChangePasswordRequest: {
            /** Current Password */
            current_password: string;
            /** New Password */
            new_password: string;
        };
        /**
         * CharacterClass
         * @enum {string}
         */
        CharacterClass: "Mechanik" | "Anioł" | "Chopper" | "Egzekutor" | "Gubernator" | "Guru" | "Kierowca" | "Muza" | "Operator" | "Psychol" | "Tekknik" | "Żyleta";
        /**
         * CreateUserResponseSchema
         * @description Schema dla odpowiedzi na tworzenie użytkownika
         */
        CreateUserResponseSchema: {
            /** Id */
            id: number;
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Role Id */
            role_id: number;
        };
        /**
         * CreateUserSchema
         * @description Schema dla tworzenia użytkownika
         */
        CreateUserSchema: {
            /** Email */
            email: string;
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /**
         * CurrentUserResponseSchema
         * @description Schema dla odpowiedzi z danymi aktualnego użytkownika
         */
        CurrentUserResponseSchema: {
            /** Id */
            id: number;
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Role Id */
            role_id: number;
        };
        /**
         * Equipment
         * @description Ekwipunek postaci
         */
        Equipment: {
            /** Name */
            name: string;
            /** Description */
            description: string;
            /**
             * Isremovable
             * @default false
             */
            isRemovable: boolean;
            /**
             * Isweapon
             * @default false
             */
            isWeapon: boolean;
            /** Options */
            options?: {
                [key: string]: string;
            }[] | null;
        };
        /**
         * GeneratedCharacter
         * @description Wygenerowana postać
         */
        GeneratedCharacter: {
            /** Name */
            name: string;
            /** Characterclass */
            characterClass: string;
            stats: components["schemas"]["Stats"];
            /** Appearance */
            appearance: string;
            /** Description */
            description: string;
            /** Moves */
            moves: components["schemas"]["Move"][];
            /** Equipment */
            equipment: components["schemas"]["Equipment"][];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * InitialInfo
         * @description Informacje początkowe o postaci przy jej generowaniu
         */
        InitialInfo: {
            /** Characterbasics */
            characterBasics: string;
            /** Characterbackground */
            characterBackground: string;
            /** Charactertraits */
            characterTraits: string;
            /** Worlddescription */
            worldDescription: string;
        };
        /**
         * LoginRequest
         * @description Model żądania logowania
         */
        LoginRequest: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /**
         * LogoutResponse
         * @description Model odpowiedzi na wylogowanie
         */
        LogoutResponse: {
            /** Message */
            message: string;
        };
        /**
         * Move
         * @description Ruch postaci
         */
        Move: {
            /** Name */
            name: string;
            /** Description */
            description: string;
        };
        /**
         * PaginatedUsersResponse
         * @description Model odpowiedzi z paginowaną listą użytkowników
         */
        PaginatedUsersResponse: {
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Per Page */
            per_page: number;
            /** Total Pages */
            total_pages: number;
            /** Users */
            users: components["schemas"]["UserListItemSchema"][];
        };
        /**
         * Question
         * @description Pytanie
         */
        Question: {
            /** Text */
            text: string;
            /** Type */
            type: string;
            /** Options */
            options?: string[] | null;
        };
        /**
         * SavedCharacterResponse
         * @description Model odpowiedzi z zapisaną postacią
         */
        SavedCharacterResponse: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Character Class */
            character_class: string;
            /** Stats */
            stats: Record<string, never>;
            /** Appearance */
            appearance: string;
            /** Description */
            description: string;
            /** Moves */
            moves: Record<string, never>[];
            /** Equipment */
            equipment: Record<string, never>[];
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * Stats
         * @description Statystyki postaci
         */
        Stats: {
            /** Cool */
            cool: number;
            /** Hard */
            hard: number;
            /** Hot */
            hot: number;
            /** Sharp */
            sharp: number;
            /** Weird */
            weird: number;
        };
        /**
         * Token
         * @description Model tokenu
         */
        Token: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
            /** Refresh Token */
            refresh_token: string;
        };
        /**
         * UpdateUserRoleSchema
         * @description Schema dla aktualizacji roli użytkownika
         */
        UpdateUserRoleSchema: {
            /** Role Id */
            role_id: number;
        };
        /**
         * UserCreationTokenResponse
         * @description Schema odpowiedzi dla tokenu tworzenia konta
         */
        UserCreationTokenResponse: {
            /** Id */
            id: string;
            /** Max Uses */
            max_uses: number;
            /** Uses */
            uses: number;
            /**
             * Expires At
             * Format: date-time
             */
            expires_at: string;
        };
        /**
         * UserListItemSchema
         * @description Model użytkownika w liście
         */
        UserListItemSchema: {
            /** Id */
            id: number;
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Role Id */
            role_id?: number | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root_api_v1_core__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    login_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_token_api_v1_auth_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                refresh_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    logout_api_v1_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LogoutResponse"];
                };
            };
        };
    };
    get_current_user_api_v1_auth_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CurrentUserResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    register_api_v1_auth_register_post: {
        parameters: {
            query?: {
                account_creation_token?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateUserResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_account_creation_token_api_v1_auth_generate_account_creation_token_post: {
        parameters: {
            query?: {
                max_uses?: number;
            };
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserCreationTokenResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_my_account_api_v1_auth_delete_my_account_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_account_creation_tokens_api_v1_auth_account_creation_tokens_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserCreationTokenResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_account_creation_token_api_v1_auth_account_creation_tokens__token_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                token_id: string;
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_users_api_v1_auth_users_get: {
        parameters: {
            query?: {
                /** @description Numer strony */
                page?: number;
                /** @description Ilość użytkowników na stronę */
                per_page?: number;
                /** @description Pole po którym sortować */
                sort_by?: string;
                /** @description Kierunek sortowania */
                sort_order?: string;
            };
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedUsersResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_api_v1_auth_users__user_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_role_api_v1_auth_users__user_id__role_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserRoleSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CurrentUserResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    change_password_api_v1_auth_change_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ChangePasswordRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    change_username_api_v1_auth_change_username_put: {
        parameters: {
            query: {
                new_username: string;
            };
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_available_moves_api_v1_character_gen_moves__character_class__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                character_class: components["schemas"]["CharacterClass"];
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Move"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_base_equipment_api_v1_character_gen_equipment__character_class__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                character_class: components["schemas"]["CharacterClass"];
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Equipment"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_available_weapons_api_v1_character_gen_weapons__character_class__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                character_class: components["schemas"]["CharacterClass"];
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Equipment"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_class_description_api_v1_character_gen_class_description__character_class__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                character_class: components["schemas"]["CharacterClass"];
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_character_api_v1_character_gen_generate_post: {
        parameters: {
            query: {
                character_class: components["schemas"]["CharacterClass"];
            };
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_generate_character_api_v1_character_gen_generate_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GeneratedCharacter"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    fetch_creation_questions_api_v1_character_gen_questions_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InitialInfo"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Question"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    save_character_api_v1_character_gen_save_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GeneratedCharacter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GeneratedCharacter"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_saved_characters_api_v1_character_gen_saved_characters_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SavedCharacterResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_characters_stats_api_v1_character_gen_saved_characters_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_character_api_v1_character_gen_saved_characters__character_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                character_id: number;
            };
            cookie?: {
                access_token?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SavedCharacterResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    read_item_items__item_id__get: {
        parameters: {
            query?: {
                q?: string | null;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
