/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authenticatedImport } from './routes/__authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as authenticatedProfileIndexImport } from './routes/__authenticated/profile/index'
import { Route as authenticatedDashboardIndexImport } from './routes/__authenticated/dashboard/index'
import { Route as authenticatedCharacterCreatorIndexImport } from './routes/__authenticated/character-creator/index'
import { Route as authenticatedCharacterCharacterIdIndexImport } from './routes/__authenticated/character/$characterId/index'

// Create/Update Routes

const authenticatedRoute = authenticatedImport.update({
  id: '/__authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedProfileIndexRoute = authenticatedProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => authenticatedRoute,
} as any)

const authenticatedDashboardIndexRoute =
  authenticatedDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => authenticatedRoute,
  } as any)

const authenticatedCharacterCreatorIndexRoute =
  authenticatedCharacterCreatorIndexImport.update({
    id: '/character-creator/',
    path: '/character-creator/',
    getParentRoute: () => authenticatedRoute,
  } as any)

const authenticatedCharacterCharacterIdIndexRoute =
  authenticatedCharacterCharacterIdIndexImport.update({
    id: '/character/$characterId/',
    path: '/character/$characterId/',
    getParentRoute: () => authenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__authenticated': {
      id: '/__authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/__authenticated/character-creator/': {
      id: '/__authenticated/character-creator/'
      path: '/character-creator'
      fullPath: '/character-creator'
      preLoaderRoute: typeof authenticatedCharacterCreatorIndexImport
      parentRoute: typeof authenticatedImport
    }
    '/__authenticated/dashboard/': {
      id: '/__authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardIndexImport
      parentRoute: typeof authenticatedImport
    }
    '/__authenticated/profile/': {
      id: '/__authenticated/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof authenticatedProfileIndexImport
      parentRoute: typeof authenticatedImport
    }
    '/__authenticated/character/$characterId/': {
      id: '/__authenticated/character/$characterId/'
      path: '/character/$characterId'
      fullPath: '/character/$characterId'
      preLoaderRoute: typeof authenticatedCharacterCharacterIdIndexImport
      parentRoute: typeof authenticatedImport
    }
  }
}

// Create and export the route tree

interface authenticatedRouteChildren {
  authenticatedCharacterCreatorIndexRoute: typeof authenticatedCharacterCreatorIndexRoute
  authenticatedDashboardIndexRoute: typeof authenticatedDashboardIndexRoute
  authenticatedProfileIndexRoute: typeof authenticatedProfileIndexRoute
  authenticatedCharacterCharacterIdIndexRoute: typeof authenticatedCharacterCharacterIdIndexRoute
}

const authenticatedRouteChildren: authenticatedRouteChildren = {
  authenticatedCharacterCreatorIndexRoute:
    authenticatedCharacterCreatorIndexRoute,
  authenticatedDashboardIndexRoute: authenticatedDashboardIndexRoute,
  authenticatedProfileIndexRoute: authenticatedProfileIndexRoute,
  authenticatedCharacterCharacterIdIndexRoute:
    authenticatedCharacterCharacterIdIndexRoute,
}

const authenticatedRouteWithChildren = authenticatedRoute._addFileChildren(
  authenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof authenticatedRouteWithChildren
  '/about': typeof AboutIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/character-creator': typeof authenticatedCharacterCreatorIndexRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/profile': typeof authenticatedProfileIndexRoute
  '/character/$characterId': typeof authenticatedCharacterCharacterIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof authenticatedRouteWithChildren
  '/about': typeof AboutIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/character-creator': typeof authenticatedCharacterCreatorIndexRoute
  '/dashboard': typeof authenticatedDashboardIndexRoute
  '/profile': typeof authenticatedProfileIndexRoute
  '/character/$characterId': typeof authenticatedCharacterCharacterIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/__authenticated': typeof authenticatedRouteWithChildren
  '/about/': typeof AboutIndexRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/__authenticated/character-creator/': typeof authenticatedCharacterCreatorIndexRoute
  '/__authenticated/dashboard/': typeof authenticatedDashboardIndexRoute
  '/__authenticated/profile/': typeof authenticatedProfileIndexRoute
  '/__authenticated/character/$characterId/': typeof authenticatedCharacterCharacterIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/register'
    | '/character-creator'
    | '/dashboard'
    | '/profile'
    | '/character/$characterId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/register'
    | '/character-creator'
    | '/dashboard'
    | '/profile'
    | '/character/$characterId'
  id:
    | '__root__'
    | '/'
    | '/__authenticated'
    | '/about/'
    | '/login/'
    | '/register/'
    | '/__authenticated/character-creator/'
    | '/__authenticated/dashboard/'
    | '/__authenticated/profile/'
    | '/__authenticated/character/$characterId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticatedRoute: typeof authenticatedRouteWithChildren
  AboutIndexRoute: typeof AboutIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticatedRoute: authenticatedRouteWithChildren,
  AboutIndexRoute: AboutIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__authenticated",
        "/about/",
        "/login/",
        "/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__authenticated": {
      "filePath": "__authenticated.tsx",
      "children": [
        "/__authenticated/character-creator/",
        "/__authenticated/dashboard/",
        "/__authenticated/profile/",
        "/__authenticated/character/$characterId/"
      ]
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/__authenticated/character-creator/": {
      "filePath": "__authenticated/character-creator/index.tsx",
      "parent": "/__authenticated"
    },
    "/__authenticated/dashboard/": {
      "filePath": "__authenticated/dashboard/index.tsx",
      "parent": "/__authenticated"
    },
    "/__authenticated/profile/": {
      "filePath": "__authenticated/profile/index.tsx",
      "parent": "/__authenticated"
    },
    "/__authenticated/character/$characterId/": {
      "filePath": "__authenticated/character/$characterId/index.tsx",
      "parent": "/__authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
